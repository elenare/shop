<?xml version="1.0"?>

<!--
 * Copyright (C) 2013 Juergen Zimmermann, Hochschule Karlsruhe
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">

    <!-- Bei mehreren Datasources bzw. Datenbanken ist XA-Commit erforderlich -->
    <!-- Siehe Konfiguration in %JBOSS_HOME%\standalone\configuration\standalone.xml -->

    <persistence-unit name="default">
	    <jta-data-source>java:jboss/datasources/shop</jta-data-source>
				
		<!-- Caching von Objekten mit @Cacheable -->
		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

		<properties>
			<property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
			<property name="javax.persistence.schema-generation.create-source" value="metadata-then-script"/>
			
			<!-- unterhalb des Verzeichnisses src\main\resources -->
			<property name="javax.persistence.schema-generation.create-script-source" value="sql/create.sql"/>
			<property name="javax.persistence.sql-load-script-source" value="sql/insert.sql"/>
			
			<property name="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
			<property name="javax.persistence.schema-generation.scripts.create-target" value="/Users/chuzzla/db/create.sql"/>
			<property name="javax.persistence.schema-generation.scripts.drop-target" value="/Users/chuzzla/db/drop.sql"/>
		    
			<!-- http://docs.jboss.org/hibernate/orm/4.3/manual/en-US/html/ch03.html -->
			<!-- https://docs.jboss.org/author/display/WFLY8/JPA+Reference+Guide -->
			<!-- http://docs.jboss.org/hibernate/core/4.3/javadocs/org/hibernate/cfg/AvailableSettings.html -->
			
			<!-- Keine proprietaeren Erweiterungen von HQL nutzen -->
			<property name="hibernate.query.jpaql_strict_compliance" value="true"/>

            <!-- SQL-Anweisungen lesbar protokollieren und Kommentare hinzufuegen -->
			<property name="hibernate.format_sql" value="true"/>
			<property name="hibernate.use_sql_comments" value="true"/>
			
			<!-- Batch fuer DML von automatisch versionierten Datensaetzen -->
			<property name="hibernate.jdbc.batch_versioned_data" value="true"/>
			
			<!-- L2C: Default = Infinispan -->
			<property name="hibernate.cache.use_second_level_cache" value="true"/>
			<property name="hibernate.cache.use_query_cache" value="true"/>
			
			<!-- direktes Abspeichern von Entity-Referenzen im L2C, falls die Entities unveraenderlich sind -->
			<property name="hibernate.cache.use_reference_entries" value="true"/>
                        <property name="hibernate.hbm2ddl.auto" value="update" />
            
            <!-- https://hibernate.atlassian.net/browse/HHH-9390 https://hibernate.atlassian.net/browse/HHH-9387 https://hibernate.atlassian.net/browse/HHH-9389 -->
            <!--
            <property name="hibernate.ejb.naming_strategy_delegator" value="org.hibernate.cfg.naming.ImprovedNamingStrategyDelegator" />
            -->
		</properties>
	</persistence-unit>
    
	<persistence-unit name="picketlink-default">
	    <jta-data-source>java:jboss/datasources/identity</jta-data-source>
		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
        
        <!-- Entity-Klassen fuer PicketLink -->
        <class>org.picketlink.idm.jpa.model.sample.simple.AttributedTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.AccountTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.RoleTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.GroupTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.IdentityTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.RelationshipTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.RelationshipIdentityTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.PartitionTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.PasswordCredentialTypeEntity</class>
        <class>org.picketlink.idm.jpa.model.sample.simple.AttributeTypeEntity</class>
		<properties>
			<property name="javax.persistence.schema-generation.database.action" value="create"/>
			<property name="javax.persistence.schema-generation.create-source" value="script"/>
			<property name="javax.persistence.schema-generation.create-script-source" value="sql/picketlinkSequence.sql"/>
            <property name="javax.persistence.sql-load-script-source" value="sql/picketLinkDeleteFrom.sql"/>
            
            <property name="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
            <property name="javax.persistence.schema-generation.scripts.create-target" value="/Users/chuzzla/db/createIdentity.sql"/>
			<property name="javax.persistence.schema-generation.scripts.drop-target" value="/Users/chuzzla/db/dropIdentity.sql"/>

			<property name="hibernate.cache.use_second_level_cache" value="true"/>
			<property name="hibernate.cache.use_reference_entries" value="true"/>
		</properties>
	</persistence-unit>
    
    <!--
    <persistence-unit name="mem">
	    <jta-data-source>java:jboss/datasources/shopMem</jta-data-source>
		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
		<properties>
			<property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
			<property name="javax.persistence.schema-generation.create-source" value="metadata-then-script"/>
			<property name="javax.persistence.schema-generation.create-script-source" value="sql/create.sql"/>
			<property name="javax.persistence.sql-load-script-source" value="sql/insert.sql"/>
			<property name="javax.persistence.schema-generation.scripts.action" value="drop-and-create"/>
			<property name="javax.persistence.schema-generation.scripts.create-target" value="C:/temp/create.sql"/>
			<property name="javax.persistence.schema-generation.scripts.drop-target" value="C:/temp/drop.sql"/>
			<property name="hibernate.query.jpaql_strict_compliance" value="true"/>
			<property name="hibernate.format_sql" value="true"/>
			<property name="hibernate.use_sql_comments" value="true"/>
			<property name="hibernate.jdbc.batch_versioned_data" value="true"/>
			<property name="hibernate.cache.use_second_level_cache" value="true"/>
			<property name="hibernate.cache.use_query_cache" value="true"/>
			<property name="hibernate.cache.use_reference_entries" value="true"/>
		</properties>
	</persistence-unit>
    -->
</persistence>